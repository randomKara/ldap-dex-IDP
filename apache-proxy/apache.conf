ServerRoot "/usr/local/apache2"
Listen 80

LoadModule mpm_event_module modules/mod_mpm_event.so
LoadModule authz_core_module modules/mod_authz_core.so
LoadModule authz_host_module modules/mod_authz_host.so
LoadModule dir_module modules/mod_dir.so
LoadModule mime_module modules/mod_mime.so
LoadModule rewrite_module modules/mod_rewrite.so
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_http_module modules/mod_proxy_http.so
LoadModule headers_module modules/mod_headers.so
LoadModule log_config_module modules/mod_log_config.so
LoadModule status_module modules/mod_status.so
LoadModule unixd_module modules/mod_unixd.so

# User and Group
User daemon
Group daemon

# Security headers - Zero Trust compliance
Header always set X-Content-Type-Options "nosniff"
Header always set X-Frame-Options "DENY"
Header always set X-XSS-Protection "1; mode=block"
Header always set Referrer-Policy "strict-origin-when-cross-origin"
Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"

# Remove server information
ServerTokens Prod
ServerSignature Off

<IfModule dir_module>
    DirectoryIndex index.html
</IfModule>

<Files ".ht*">
    Require all denied
</Files>

ErrorLog /proc/self/fd/2
LogLevel warn
LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
CustomLog /proc/self/fd/1 combined

TypesConfig conf/mime.types

# Main virtual host with strict access control
<VirtualHost *:80>
    ServerName 172.25.0.30
    DocumentRoot /usr/local/apache2/htdocs
    
    # CORS Policy - Strict origin control
    Header always set Access-Control-Allow-Origin "http://172.25.0.40"
    Header always set Access-Control-Allow-Methods "GET, POST, OPTIONS"
    Header always set Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With"
    Header always set Access-Control-Allow-Credentials "true"
    
    # CSRF Protection
    Header always set X-CSRF-Protection "1; mode=block"
    
    # Enable proxy modules
    ProxyPreserveHost On
    ProxyRequests Off
    
    # Proxy everything to Dex with IP-based routing
    ProxyPass /static/ http://172.25.0.20:5556/static/
    ProxyPassReverse /static/ http://172.25.0.20:5556/static/
    ProxyPass /theme/ http://172.25.0.20:5556/theme/
    ProxyPassReverse /theme/ http://172.25.0.20:5556/theme/
    ProxyPass /.well-known/ http://172.25.0.20:5556/.well-known/
    ProxyPassReverse /.well-known/ http://172.25.0.20:5556/.well-known/
    ProxyPass /auth http://172.25.0.20:5556/auth
    ProxyPassReverse /auth http://172.25.0.20:5556/auth
    ProxyPass /token http://172.25.0.20:5556/token
    ProxyPassReverse /token http://172.25.0.20:5556/token
    ProxyPass /userinfo http://172.25.0.20:5556/userinfo
    ProxyPassReverse /userinfo http://172.25.0.20:5556/userinfo
    ProxyPass /keys http://172.25.0.20:5556/keys
    ProxyPassReverse /keys http://172.25.0.20:5556/keys
    
    # Add security headers for OAuth endpoints with proper network access
    <Location ~ "/(auth|\.well-known|token|userinfo|keys|static|theme)">
        # Allow access from Docker internal network and PEP
        Require ip 172.25.0.0/24
        Require ip 127.0.0.1
        
        ProxyPreserveHost On
        Header always set X-Forwarded-Proto "http"
        Header always set X-Forwarded-Port "80"
        Header always set X-Forwarded-Host "172.25.0.30"
        Header always set X-CSRF-Token "required"
        
        # Additional CORS for OAuth endpoints
        Header always set Access-Control-Allow-Origin "http://172.25.0.40"
        Header always set Access-Control-Allow-Credentials "true"
    </Location>
    
    # Default redirect to OAuth2 PEP with IP-based redirect
    RewriteEngine On
    RewriteRule ^/?$ http://172.25.0.40/ [R=302,L]
    
    # Health check - allow from internal network
    <Location /health>
        SetHandler server-status
        Require ip 172.25.0.0/24
        Require ip 127.0.0.1
    </Location>
    
    # Log configuration
    ErrorLog /proc/self/fd/2
    CustomLog /proc/self/fd/1 combined
</VirtualHost> 