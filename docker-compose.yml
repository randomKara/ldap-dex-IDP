services:
  openldap:
    build: ./LDAP
    container_name: ldap-server
    environment:
      LDAP_ORGANISATION: "Example Inc."
      LDAP_DOMAIN: "example.org"
      LDAP_BASE_DN: "dc=example,dc=org"
      LDAP_ADMIN_PASSWORD: "adminpassword"
      LDAP_CONFIG_PASSWORD: "configpassword"
      LDAP_READONLY_USER: "false"
      LDAP_RFC2307BIS_SCHEMA: "false"
      LDAP_BACKEND: "mdb"
      LDAP_TLS: "true"
      LDAP_TLS_CRT_FILENAME: "ldap.crt"
      LDAP_TLS_KEY_FILENAME: "ldap.key"
      LDAP_TLS_DH_PARAM_FILENAME: "dhparam.pem"
      LDAP_TLS_CA_CRT_FILENAME: "ca.crt"
      LDAP_TLS_ENFORCE: "false"
      LDAP_TLS_VERIFY_CLIENT: "never"
      LDAP_REPLICATION: "false"
    ports:
      - "1389:389"
      - "1636:636"
    networks:
      secure-network:
        ipv4_address: 172.25.0.10

  dex:
    build: ./dex
    container_name: dex-server
    # Remove external port exposure for security
    expose:
      - "5556"
    volumes:
      - ./dex/config.yaml:/etc/dex/config.yaml
    depends_on:
      - openldap
    networks:
      secure-network:
        ipv4_address: 172.25.0.20

  apache-proxy:
    build: ./apache-proxy
    container_name: apache-reverse-proxy
    ports:
      - "80:80"
    depends_on:
      - dex
    networks:
      secure-network:
        ipv4_address: 172.25.0.30

  pep:
    build: ./PEP
    container_name: pep
    ports:
      - "5000:80"
    depends_on:
      - apache-proxy
      - flask-app
    networks:
      secure-network:
        ipv4_address: 172.25.0.40

  flask-app:
    build: ./flask-app
    container_name: flask-application
    # Remove external port exposure for security
    expose:
      - "8080"
    environment:
      FLASK_PORT: 8080
    depends_on:
      - openldap
    networks:
      secure-network:
        ipv4_address: 172.25.0.50

networks:
  secure-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/24
          gateway: 172.25.0.1 